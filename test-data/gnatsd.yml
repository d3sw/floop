# Required metadata keys that need to supplied at runtime.  If specified floop will check these are
# defined before starting the child process.
meta:
  - refname

# Command and args for child process
command: docker
args: [
  "run", "--rm",
  "opencoconut/ffmpeg", "-progress", "/dev/stdout",
  "-i", "http://files.coconut.co.s3.amazonaws.com/test.mp4",
  "-f", "webm", "-c:v", "libvpx", "-c:a", "libvorbis",
  "test.webm"
  ]

# If true don't write to stdout or stderr
quiet: false

# Handler configuration for each lifecycle phase
handlers:
  # Called before the child process is launched
  begin:
  - type: gnatsd
    uri: "nats://127.0.0.1:4222"
    # Continue launching child process even if handler call returns an error.  Comment this
    # out to exit w/o launching the child process on handler failure
    ignorerrors: false
    options:
      topic: test
    body: |
      {
        "RefName": "${Meta.refname}",
        "timestamp": ${Timestamp}
      }
    #context: [ "taskId" ]
  # Called any time child process flushes data to stdout and stderr
  progress:
  - type: gnatsd
    uri: "nats://127.0.0.1:4222"
    options:
      topic: test
    # Transform the event data (i.e. from stdout/stderr) into key-values before issuing the
    # callback. If floop fails to apply the transform, the event will contain raw data.
    transform: [ "kv", "\n", "=" ]
    body: |
      {
        "RefName": ${Meta.refname},
        "Details": ${Data|json}
      }

  # Called when a process exits with a zero status
  completed:
  - type: gnatsd
    #transform: ["json"]
    uri: "nats://127.0.0.1:4222"
    options:
      topic: test
    # See types.Event struct for available fields
    body: |
        {
            "RefName": "${Meta.refname}",
            "status": "COMPLETED"
        }
  # Called when the process exits with a non-zero status
  failed:
  - type: gnatsd
    uri: "nats://127.0.0.1:4222"
    options:
      topic: test
    body: |
        {
            "RefName": "${Meta.refname}",
            "status": "FAILED"
        }
